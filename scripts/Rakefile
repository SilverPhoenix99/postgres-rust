
require 'pathname'
require 'rake/clean'

RUST_PROJECT_ROOT = Pathname(__dir__).parent.expand_path
PG_ROOT = RUST_PROJECT_ROOT.parent / 'postgres'

###############################################################################
# Keywords
###############################################################################
keywords_input = PG_ROOT / 'src/include/parser/kwlist.h'
keywords_output = RUST_PROJECT_ROOT / 'parser/src/lexer/keyword/keywords.rs'

CLEAN << keywords_output

file keywords_output => [keywords_input, 'gen-keywords.rb'] do
  require_relative 'gen-keywords.rb'
  KeywordsGenerator.run! keywords_input, keywords_output
end

task build: keywords_output


###############################################################################
# Error Codes (SQLSTATE)
###############################################################################
err_codes_input = PG_ROOT / 'src/backend/utils/errcodes.txt'
err_codes_root = RUST_PROJECT_ROOT / 'basics/src/sql_state'
err_codes_output = RUST_PROJECT_ROOT / 'basics/src/sql_state/sql_states.rs'

CLEAN << err_codes_output

file err_codes_output => [err_codes_input, 'gen-errcodes.rb'] do
  require_relative 'gen-errcodes.rb'
  ErrCodesGenerator.run! err_codes_input, err_codes_output
end

###############################################################################
# uncache - Removes cargo's compiled caches, except from dependencies
###############################################################################

desc "Deletes assets of the project packages, without touching dependencies."
task :uncache do |_, args|
  require 'json'
  metadata = `cargo metadata --format-version=1 --no-deps`
  metadata = JSON.parse(metadata)

  packages = metadata['packages'].map { |package| package['name'] }

  package_filter = args.extras
  if package_filter.any?
    packages &= package_filter
    if packages.empty?
      packages = metadata['packages'].map { |package| package['name'] }.join(', ')
      puts "No packages selected to clean. Existing packages: #{packages}"
      next
    end
  end

  packages = packages.flat_map { |package| ['--package', package] }
  system 'cargo', 'clean', *packages
end

###############################################################################
# Top-level tasks
###############################################################################

desc "Generates all source files"
task generate: [keywords_output, err_codes_output]

desc "Main task - runs everything"
task build: :generate
task default: :build
