
require 'pathname'
require 'rake/clean'

RUST_PROJECT_ROOT = Pathname(__dir__).parent.expand_path
PG_ROOT = RUST_PROJECT_ROOT.parent / 'postgres'

task default: :build

###############################################################################
# Keywords
###############################################################################
keywords_input = PG_ROOT / 'src/include/parser/kwlist.h'
keywords_output = RUST_PROJECT_ROOT / 'parser/src/lexer/keyword/keywords.rs'

CLEAN << keywords_output

file keywords_output => [keywords_input, 'gen-kws.rb'] do | |
  require_relative 'gen-kws.rb'
  KeywordsGenerator.run!(keywords_input, keywords_output)
end

task build: keywords_output


###############################################################################
# Error Codes (SQLSTATE)
###############################################################################
err_codes_input = PG_ROOT / 'src/backend/utils/errcodes.txt'
err_codes_root = RUST_PROJECT_ROOT / 'basics/src/sql_state'
err_codes_outputs = [
  err_codes_root / 'enums.rs',
  err_codes_root / 'variant_sets.rs'
]

CLEAN += err_codes_outputs

err_codes_outputs.each do |output|
  file output => [err_codes_input, 'gen-errcodes.rb']
end

file err_codes_input => :build_err_codes
file 'gen-errcodes.rb' => :build_err_codes

task :build_err_codes do
  require_relative 'gen-errcodes.rb'
  ErrCodesGenerator.run!(err_codes_input, err_codes_root)
end

task build: :build_err_codes
