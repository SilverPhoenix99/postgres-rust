[workspace]
resolver = "3"

members = [
    "basics",
    "elog",
    "guc",
    "parser/ast",
    "parser/collation-stmt",
    "parser/combinators",
    "parser/conversion-stmt",
    "parser/core",
    "parser/event-trigger-stmt",
    "parser/generic-options-combinators",
    "parser/generic-set-ast",
    "parser/generic-set-combinators",
    "parser/interval-ast",
    "parser/interval-combinators",
    "parser/language-stmt",
    "parser/lexer",
    "parser/parser",
    "parser/sink-ast",
    "parser/sink-combinators",
    "parser/transaction-stmt-ast",
    "parser/transaction-stmt-combinators",
    "parser/type-combinators",
]

[workspace.package]
edition = "2024"
version = "19.0.0-devel"

[workspace.lints.clippy]
alloc_instead_of_core = "forbid"
items_after_test_module = "allow"
std_instead_of_alloc = "forbid"
std_instead_of_core = "forbid"
useless_conversion = "deny"

[workspace.lints.rust]
unused_imports = "deny"
macro_expanded_macro_exports_accessed_by_absolute_paths = "warn"

[workspace.dependencies]
assert_matches = "1"
bitflags = "2"
bitvec = "1"
derive_more = "2"
lazy_static = "1"
test-case = "3"

pg-ast = { path = "parser/ast" }
pg-basics = { path = "basics" }
pg-collation-stmt = { path = "parser/collation-stmt" }
pg-combinators = { path = "parser/combinators", features = [] }
pg-conversion-stmt = { path = "parser/conversion-stmt" }
pg-elog = { path = "elog" }
pg-event-trigger-stmt = { path = "parser/event-trigger-stmt" }
pg-generic-options-combinators = { path = "parser/generic-options-combinators" }
pg-generic-set-ast = { path = "parser/generic-set-ast" }
pg-generic-set-combinators = { path = "parser/generic-set-combinators" }
pg-guc = { path = "guc" }
pg-interval-ast = { path = "parser/interval-ast" }
pg-interval-combinators = { path = "parser/interval-combinators" }
pg-language-stmt = { path = "parser/language-stmt" }
pg-lexer = { path = "parser/lexer" }
pg-parser = { path = "parser/parser" }
pg-parser-core = { path = "parser/core" }
pg-sink-ast = { path = "parser/sink-ast" }
pg-sink-combinators = { path = "parser/sink-combinators" }
pg-transaction-stmt-ast = { path = "parser/transaction-stmt-ast" }
pg-transaction-stmt-combinators = { path = "parser/transaction-stmt-combinators" }
pg-type-combinators = { path = "parser/type-combinators" }
